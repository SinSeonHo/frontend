웹(앱) 개발 : 프론트 / 백엔드
- frontend : html, css, javascript, react, vue, ...
- backend : node.js, java, python, 닷넷, ...
- 기반기술 : 서버, 네트워크


- 브라우저 기반
- 브라우저를 통해서 실행될 수 있는 언어
    1. HTML(Hyper Text Markup Language)
        웹 브라우저에서 표시되도록 설게된 표준 마크업 언어
        태그
        화면 구조 설계

    2. CSS(Cascading Style Sheets) : 디자인
        1) head 태그 안 : 파일이 길지않다면 head태그 안에서도 사용되는편 <style>~~~~</style>
        2) inline 처리 : 직접처리는 비추천 <p style="color: darkorange"></p>
        3) 외부 파일 처리(추천) : <link rel="stylesheet" href="mycss.css" />
    - 디자인을 반영할 요소 선택
        1) 태그 선택자 : 태그명
        2) id 선택자 : #
        3) class 선택자 : .
        4) 전체 선택자 : *
        5) 자식/자손 선택자 : >, 공백
        6) 형제 선택자
            - 인접형제 : +
            - 모든형제 : ~
        7) 그룹 선택자 : 선택자1, 선택자2
            여러 선택자를 한꺼번에 동일한 디자인 적용가능
        8) 속성 선택자
            - [속성명] : [target]
            - [속성명=값] : [target="_blank"]
            - [속성명~=값] : [title~="pepe"] - 값과 정확히 일치하는 단어가있어야함
            - [속성명^=값] : 값으로 시작하는
            - [속성명$=값] : 값으로 끝나는
            - [속성명*=값] : 값이 포함된
        9) 가상(Pseudo) 클래스 선택자
            - a tag
                :link
                :active
                :visited
            - 다른 요소
                :hover => 특정 요소에 마우스가 올라간 상황
                :focus => 특정 요소에 초점이 맞춰진 상황
            - ui 변화에 따른 요소
                :disabled => 모든 요소에서 사용가능
                :checked => radio, checkbox 에서 요소가 선택된 상황
        10) 가상 요소 선택자
            ::before
            ::after
        11) 구조 선택자 (가상 클래스 선택자의 개념과 동일하다고 보면 됨)
            :first-child
            :last-child
            :nth-child(n)
             n : 0부터 시작
             :nth-child(2n) => 짝수
             :nth-child(2n + 1) => 홀수
             :nth-child(-n + 3)
                -0 + 3 = 3
                -1 + 3 = 2
                -2 + 3 = 1
                -3 + 3 = 0 (여기서부터 무시됨)
                 :nth-child(n + 4) => 4번째 이상부터
        12) 형태구조 선택자 : 태그명 사용해야함
            :first-of-type
            :last-of-type
            :nth-last-of-type(n)
        13) 부정 선택자
            E:not(S) => S가 아닌 E선택     
    - color
        1) 색상명 : red, blue, ...
        2) 16진수 : #13ffee
        3) RGB : rgb(0,255,0) / rgba(0,255,0,0.5)
    - 단위
        1) px : 고정크기 (브라우저 크기를 줄이면 줄인 방향으로 스크롤 생김)
        2) % : 상대값 (부모가 만들어 준 공간에서의 비율)
        3) em : em단위가 쓰여진 곳의 폰트 사이즈 배수
        4) rem : 루트(root) 요소의 크기를 기준으로 함 (배수)
        5) vw, vh : viewport width, viewport height 화면 기준으로 함
           (viewport : 브라우저에서 내용이없는 부분까지 전체를 포함하는 공간)     
    - 상속 : 글자와 관련된 속성들이 주로 상속을 가짐
    - 우선순위 : 
        우선순위가 높은 기준
        1. 명시도 점수가 높은 선언이 우선
            (!important > 인라인선언 > 아이디(100) > 클래스(10) > 태그 > 전체 > 상속)
        2. 점수가 같은 경우 가장 마지막에 해석되는 선언이 우선
        3. 명시도는 상속 규칙보다 우선
        4. !important 가 적용된 선언 방식이 최우선

    3. JS(JavaScript)
        - 동적 작업 담당
        - ex) 버튼 클릭 시 메시지 띄우기
        - HTML 안에 작성 가능 : 웹 페이지 불러올 때 스크립트가 자동 실행됨
        - 서버에서도 실행 가능 : NodeJS
        - 자바스크립트 실행환경
            1) 브라우저
            2) Node.js



    - 외부 라이브러리(프레임워크) 사용법
        1) 다운로드
        2) CDN(Content Delivery Network) : 컨텐츠 전송 네트워크

